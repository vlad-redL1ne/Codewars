from asserts.Asserts import assert_true
import importlib

encode = importlib.import_module('kyu6.Error correction #1 - Hamming Code.solution').encode
decode = importlib.import_module('kyu6.Error correction #1 - Hamming Code.solution').decode


class TestSolution:
    def test_error_correction_1_hamming_code(self):
        assert_true(encode('4z'), '000000111111000111000000000111111111111000111000')
        assert_true(encode("hey"), "000111111000111000000000000111111000000111000111000111111111111000000111")
        assert_true(encode("The Sensei told me that i can do this kata
        assert_true(encode("T3st"), "000111000111000111000000000000111111000000111111000111111111000000111111000111111111000111000000")

        assert_true(decode("100111111000111001000010000111111000000111001111000111110110111000010111"), "hey")
        assert_true(decodehe Sensei told me that i can do this kata")
        assert_true(decode("000111000111000111000010000000111111000000111111000111111111000000111111000111111111000111010000"), "T3st")
        assert_true(decode("000111000111000111000001000000111111110111111111000111111111000000111111000111111111000111000000000000111000000000000111000000111000000111000111"), "T?st!%")
        assert_true(decode('000000111111000111000000000111111111111000111000'), '4z')